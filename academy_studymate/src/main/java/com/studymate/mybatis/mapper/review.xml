<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
              "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
              
<mapper namespace="com.studymate.review.model.ReviewDao">
	
	<sql id="columns"> borvNum, borvTitle, borvContent, borvReplycount, borvReadcount, borvRegdate, memName, memId </sql>
	<sql id="replyColumns"> repNum, repContent, borvNum, repRegdate, memName, memId </sql>
	
	<sql id="search">
		<where>
			<if test="keyWord!=null and keyWord!=''">
				<if test="keyField=='titleNcontent'">
					borvContent LIKE '%'||#{keyWord}||'%' or borvTitle LIKE '%'||#{keyWord}||'%' 
				</if>
				<if test="keyField=='title'">
					borvTitle LIKE '%'||#{keyWord}||'%' 
				</if>
				<if test="keyField=='content'">
					borvContent like '%${keyWord}%' 
				</if>
			</if>
		</where>
	</sql>

	<select id="totalcount" resultType="Integer" >
		SELECT count(*) FROM review <include refid="search" />
	</select>
	
	<select id="list" resultType="ReviewDto" parameterType="java.util.HashMap">
		SELECT <include refid="columns" /> 
		FROM( SELECT ROWNUM num, <include refid="columns" /> 
			FROM ( SELECT <include refid="columns" /> FROM review 
			<include refid="search" /> 
				ORDER BY borvRegdate DESC ) ) WHERE num between #{startRow} and #{endRow}
	</select>
	
	<select id="read" resultType="ReviewDto"  parameterType="Integer">
		SELECT <include refid="columns" /> FROM review WHERE borvNum = #{borvNum}
	</select>
	
	<select id="readReply" resultType="ReviewReplyDto" parameterType="Integer" >
		SELECT <include refid="replyColumns" /> FROM rvreply WHERE borvNum = #{borvNum} 
	</select>
	
	<select id="readPrev" resultType="ReviewDto"  parameterType="Integer">
		<![CDATA[
        SELECT borvNum, borvTitle, borvContent, borvReplycount, borvReadcount, borvRegdate, memName, memId 
          FROM (
	                SELECT borvNum, borvTitle, borvContent, borvReplycount, borvReadcount, borvRegdate, memName, memId FROM review 
	                WHERE borvNum > #{borvNum}  
	                ORDER BY borvNum ASC 
               ) WHERE ROWNUM = 1
         ]]>
	</select>
	
	<select id="readNext" resultType="ReviewDto"  parameterType="Integer">
		<![CDATA[
        SELECT borvNum, borvTitle, borvContent, borvReplycount, borvReadcount, borvRegdate, memName, memId 
          FROM (
	                SELECT borvNum, borvTitle, borvContent, borvReplycount, borvReadcount, borvRegdate, memName, memId FROM review 
	                WHERE borvNum < #{borvNum}  
	                ORDER BY borvNum ASC 
               ) WHERE ROWNUM = 1
         ]]>
	</select>
	
	<insert id="write"  parameterType="ReviewDto">
		INSERT INTO review VALUES (	borvNum.nextval, #{borvTitle}, #{borvContent}, 0, 0, sysdate, '운영자', 'admin' ) 
 	</insert>
	
	<insert id="writeReply" parameterType="ReviewReplyDto">
		INSERT INTO rvreply VALUES ( repNum.nextval, #{repContent}, #{borvNum}, sysdate, '운영자', 'admin') 
	</insert>
	
	<update id="update" parameterType="ReviewDto">
		UPDATE review SET borvTitle = #{borvTitle}, borvContent = #{borvContent} WHERE borvNum = #{borvNum}  
	</update>
	
	<update id="updateReadCount" parameterType="Integer">
		UPDATE review SET borvReadcount = borvReadcount+1 WHERE borvNum = #{borvNum} 
	</update>
	
	<update id="updateAddReplyCount" parameterType="Integer">
		UPDATE review SET borvReplycount = borvReplycount+1 WHERE borvNum = #{borvNum} 
	</update>
	
	<update id="updateDownReplyCount" parameterType="Integer">
		UPDATE review SET borvReplycount = borvReplycount-1 WHERE borvNum = #{borvNum} 
	</update>
	
	<delete id="delete" parameterType="Integer">
		DELETE FROM review WHERE borvNum = #{borvNum} 
	</delete>
	
	<delete id="deleteReply" parameterType="Integer">
		DELETE FROM rvreply WHERE repNum = #{repNum} 
	</delete>
	
	<delete id="deleteMem">
		DELETE FROM review WHERE memId= #{memId} 
	</delete>
	
	<delete id="deleteReplyMem" parameterType="String">
		DELETE FROM rvreply WHERE memId = #{memId} 
	</delete>
	
	
</mapper>
